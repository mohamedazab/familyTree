name: Django CI

# workflow trigger
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8]
    steps:
      # checkout my repo so that workflow can access it
      # repository param default is github.repository
      - uses: actions/checkout@v2
      # Setup python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1 # action to setup python development
        with:
          python-version: ${{ matrix.python-version }} # version selected from the specified matrix
      # install dependencies
      - name: Install Dependencies
        run: | # multi line run
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # run tests
      # - name: Run Tests
      #   run: python manage.py test
      #   env:
      #     SECRET_KEY: ${{ secrets.SECRET_KEY }}

  test:
    runs-on: ubuntu-latest
    
    container: mohamedazab/family-tree-server
    services:
      db:
        image: neo4j:latest
        ports:
          - 7474:7474
          - 7687:7687
        env:
          NEO4J_AUTH: neo4j/abcd
          SECURE_FILE_PERMISSIONS: yes
          dbms_connector_bolt_listen__address: 0.0.0.0:7687
    
    steps:
      - uses: actions/checkout@v2

      # - name: build docker compose stack
      #   run: docker-compose --verbose up -d
      #   env:
      #     SECRET_KEY: ${{ secrets.SECRET_KEY }}
      #     NEO4J_AUTH: ${{ secrets.NEO4J_AUTH }}
      #     SECURE_FILE_PERMISSIONS: yes
      #     dbms_connector_bolt_listen__address: 0.0.0.0:7687

      # - name: check containers
      #   run: docker ps -a
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1 # action to setup python development
        with:
          python-version: 3.8 # version selected from the specified matrix
      # install dependencies
      - name: Install Dependencies
        run: | # multi line run
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: run test
        run: | 
             pip freeze
             which docker
             | ls
      
      # - name: Run Tests
      #   run: docker exec familytree_server_1 python manage.py test

  publish:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      # checkout my repo so that workflow can access it
      # repository param default is github.repository
      - uses: actions/checkout@v2
      # build docker image for the server
      - name: build Docker image
        run: docker build -t $IMAGE_NAME:latest .
        env:
          IMAGE_NAME: mohamedazab/family-tree-server
      # login to dockerhub
      - name: login to  Docker Hub
        run: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASS
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
      # publish to image dockerhub
      - name: publish to Docker Hub
        run: docker push $IMAGE_NAME:latest
        env:
          IMAGE_NAME: mohamedazab/family-tree-server
